// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication.Database;

namespace WebApplication.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20201216190335_MyFix")]
    partial class MyFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WebApplication.CurrencyUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("InputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("InputLimit")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("OutputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutputLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("CurrencyUsers");
                });

            modelBuilder.Entity("WebApplication.Database.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WebApplication.Database.Models.CurrencyAll", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Coast")
                        .HasColumnType("numeric");

                    b.Property<decimal>("InputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("InputLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutputLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferLimit")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("CurrencyNames");

                    b.HasData(
                        new
                        {
                            Id = "bucks",
                            Coast = 0m,
                            InputCommision = 0m,
                            InputLimit = 0m,
                            OutputCommision = 0m,
                            OutputLimit = 0m,
                            TransferCommision = 0m,
                            TransferLimit = 0m
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MyParam")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f49d9e6e-f676-46fc-866f-a8d2abf45518"),
                            Password = "Admin",
                            Role = "Admin",
                            UserName = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
