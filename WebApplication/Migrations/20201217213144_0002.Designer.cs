// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication.Database;

namespace WebApplication.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20201217213144_0002")]
    partial class _0002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WebApplication.CurrencyUser", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<decimal>("Count")
                        .HasColumnType("numeric");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("text");

                    b.Property<decimal>("InputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferCommision")
                        .HasColumnType("numeric");

                    b.HasKey("UserName");

                    b.ToTable("CurrencyUsers");
                });

            modelBuilder.Entity("WebApplication.Database.Models.Account", b =>
                {
                    b.Property<string>("UserMail")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<byte>("Role")
                        .HasColumnType("smallint");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserMail");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WebApplication.Database.Models.CurrencyAll", b =>
                {
                    b.Property<string>("CurrencyName")
                        .HasColumnType("text");

                    b.Property<decimal>("Coast")
                        .HasColumnType("numeric");

                    b.Property<decimal>("InputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("InputLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutputCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutputLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferCommision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TransferLimit")
                        .HasColumnType("numeric");

                    b.HasKey("CurrencyName");

                    b.ToTable("CurrencyNames");
                });
#pragma warning restore 612, 618
        }
    }
}
